{$mode objfpc}
unit mono_tokentype;

interface
{
* These tokens match the table ID except for the last
* three (string, name and base type which are special)
}
type
  PMonoTokenType = ^MonoTokenType;
  MonoTokenType =  Longint;
const
  MONO_TOKEN_MODULE = $00000000;
  MONO_TOKEN_TYPE_REF = $01000000;
  MONO_TOKEN_TYPE_DEF = $02000000;
  MONO_TOKEN_FIELD_DEF = $04000000;
  MONO_TOKEN_METHOD_DEF = $06000000;
  MONO_TOKEN_PARAM_DEF = $08000000;
  MONO_TOKEN_INTERFACE_IMPL = $09000000;
  MONO_TOKEN_MEMBER_REF = $0a000000;
  MONO_TOKEN_CUSTOM_ATTRIBUTE = $0c000000;
  MONO_TOKEN_PERMISSION = $0e000000;
  MONO_TOKEN_SIGNATURE = $11000000;
  MONO_TOKEN_EVENT = $14000000;
  MONO_TOKEN_PROPERTY = $17000000;
  MONO_TOKEN_MODULE_REF = $1a000000;
  MONO_TOKEN_TYPE_SPEC = $1b000000;
  MONO_TOKEN_ASSEMBLY = $20000000;
  MONO_TOKEN_ASSEMBLY_REF = $23000000;
  MONO_TOKEN_FILE = $26000000;
  MONO_TOKEN_EXPORTED_TYPE = $27000000;
  MONO_TOKEN_MANIFEST_RESOURCE = $28000000;
  MONO_TOKEN_GENERIC_PARAM = $2a000000;
  MONO_TOKEN_METHOD_SPEC = $2b000000;
  {
  * These do not match metadata tables directly
  }
  MONO_TOKEN_STRING = $70000000;
  MONO_TOKEN_NAME = $71000000;
  MONO_TOKEN_BASE_TYPE = $72000000;

implementation

end.
